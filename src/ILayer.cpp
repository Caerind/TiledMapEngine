#include "../include/ILayer.hpp"

////////////////////////////////////////////////////////////
ILayer::ILayer() : mType(ILayer::I), mName(""), mX(0), mY(0), mOpacity(1.f), mVisible(true)
{
}

////////////////////////////////////////////////////////////
void ILayer::render(sf::RenderTarget& target, sf::RenderStates states)
{
    if (mVisible)
    {
        states.transform *= getTransform();
    }
}

////////////////////////////////////////////////////////////
ILayer::LayerType ILayer::getLayerType() const
{
    return mType;
}

////////////////////////////////////////////////////////////
std::string ILayer::getName() const
{
    return mName;
}

////////////////////////////////////////////////////////////
void ILayer::setName(std::string const& name)
{
    mName = name;
}

////////////////////////////////////////////////////////////
int ILayer::getX() const
{
    return mX;
}

////////////////////////////////////////////////////////////
void ILayer::setX(int x)
{
    mX = x;
    setPosition(mX,mY);
}

////////////////////////////////////////////////////////////
int ILayer::getY() const
{
    return mY;
}

////////////////////////////////////////////////////////////
void ILayer::setY(int y)
{
    mY = y;
    setPosition(mX,mY);
}

////////////////////////////////////////////////////////////
float ILayer::getOpacity() const
{
    return mOpacity;
}

////////////////////////////////////////////////////////////
void ILayer::setOpacity(float opacity)
{
    mOpacity = opacity;
}

////////////////////////////////////////////////////////////
bool ILayer::isVisible() const
{
    return mVisible;
}

////////////////////////////////////////////////////////////
void ILayer::setVisible(bool visible)
{
    mVisible = visible;
}
